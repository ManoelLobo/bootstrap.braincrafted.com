<section>
    <div class="page-header">
        <h2>Forms</h2>
    </div>

    <h3>Styles</h3>

    <p>BcBootstrapBundle integrates all styles from Bootstrap. You can pass the style attribute to most form widgets</p>

    <pre><code>{{ "{{ form(form, { 'style': 'horizontal' }) }}" }}
{{ "{{ form_start(form, { 'style': 'horizontal' }) }}" }}
{{ "{{ form_row(form.firstName, { 'style': 'horizontal' }) }}" }}
{{ "{{ form_label(form.firstName, { 'style': 'horizontal' }) }}" }}</code></pre>

    <p>If you pass the style to <code>form</code> or <code>form_start</code> you don't have to pass the style attribute to each <code>form_row</code> widget. The style will be defined for each widget between <code>form_start</code> and <code>form_end</code>.</p>

    <pre><code>{{ "{{ form_start(form, { 'style': 'horizontal' }) }}" }}
    {{ "{{ form_row(form.firstName) }}" }}
    {{ "{{ form_row(form.lastName) }}" }}
{{ "{{ form_end(form) }}" }}</code></pre>

    <p>Internally BcBootstrapBundle uses functions to write and read the global style and use can also use these functions, for example, when you use HTML for the <code>&lt;form&gt;</code> tag but want set the style once for all fields.</p>

    <pre><code>&lt;form action="..." method="..." class="form-horizontal"&gt;
    {{ "{{ bootstrap_set_style('horizontal') }}" }}

    {{ "{{ form_row(form.firstName) }}" }}
    {{ "{{ form_row(form.lastName) }}" }}

    {{ "{{ bootstrap_set_style('') }}" }}
&lt;/form&gt;</code></pre>

    <p>The function <code>bootstrap_get_style()</code> returns the current style.</p>

    <h4>Examples</h4>

    <p>The following example shows the styles of all widgets provided by Symfony2 by default.</p>

    <div class="panel">
        {{ form(horizontalForm, { 'style': 'horizontal' }) }}
        <div class="panel-footer">Example</div>
    </div>

    <p>Bootstrap uses its grid to determine the size of label and widget. You can pass the <code>label_col</code> and <code>widget_col</code> options to set the number of columns label and widget should have.</p>

    <pre><code>{{ "{{ form_row(form.firstName, { 'label_col': 4, 'widget_col': 8}) }}" }}</code></pre>

    <form action="" class="form-horizontal">
        {{ form_row(form.firstName, { 'label_col': 4, 'widget_col': 8, 'style': 'horizontal'}) }}
    </form>

    <p>There is also an option <code>simple_col</code> which wraps the input field in a <code>&lt;div&gt;</code> with the given size. This is useful when creating compound types and is used, for example, in the date widget provided by BcBootstrapBundle.</p>

    <h4>Checkbox and Radio Widgets</h4>

    <p><span class="label label-info">Note</span> This section talks only about the field types <code>checkbox</code> and <code>radio</code> and not about <code>choice</code>, which can be rendered using checkbox and radio buttons.</p>

    <p>Checkbox and radio widgets are a little bit different than other types of widgets, since Bootstraps wraps the input field inside the label. Therefore there are specific blocks <code>checkbox_row</code> and <code>radio_row</code> to render this markup. The blocks <code>checkbox_widget</code> and <code>radio_widget</code> only render the input element and not the label.</p>

    <p>By default Bootstrap aligns checkboxes and radio fields on the left, if you want to align checkboxes and radio buttons with the other form elements, use the option <code>align_with_widget</code>. This option can be either setted on the <code>form_row</code> function or as an attribute when building the form.</p>

    <pre><code class="php">$builder->add('termsAccepted', 'checkbox', [ 'attr' => [ 'align_with_widget' => true ] ]);</code></pre>

    <pre><code>{{ "{{ form_row(form.termsAccepted, { 'align_with_widget': true }) }}" }}</code></pre>

    <hr>

    <h3>Additional Form Types</h3>

    <p>BcBootstrapBundle does not only provides styles for the existing form types of Symfony2 but also provides you with addional types. In some cases this is due to technical limitations of the implementation of Twig and/or Symfony2.</p>

    <h4>Collection</h4>

    <p><code>bc_collection</code> is a form type that extends Symfony2s <code>collection</code> form type and includes styles and JavaScript to use the widget out of the box.</p>

    <p>The form type also introduces new options:</p>

    <ul>
        <li><code>add_button_text</code> allows you to define the text on the <strong>Add</strong> button</li>
        <li><code>delete_button_text</code> allows you to define the text on the <strong>Delete</strong> button</li>
        <li><code>widget_col</code> sets the number of columns used for the widget</li>
        <li><code>button_col</code> sets the number of columns used for the delete button</li>
    </ul>

    <p>Here is an example of a form that lets you add and delete hobbits.</p>

    <pre><code class="php">$form = $this->createFormBuilder([])
    ->add(
        'hobbits',
        'bc_collection',
        [
            'allow_add'          => true,
            'allow_delete'       => true,
            'add_button_text'    => 'Add Hobbit',
            'delete_button_text' => 'Delete Hobbit',
            'widget_col'         => 9,
            'button_col'         => 3
        ]
    )
    ->getForm();</code></pre>

    <p>When rendered with Bootstraps <code>horizontal</code> style it will look like this:</p>

    <div class="panel">
        {{ form(bcCollectionForm, { 'style': 'horizontal' }) }}
        <div class="panel-footer">Example</div>
    </div>

</section>

<section>
    <div class="page-header">
        <h2>Menus</h2>
    </div>
</section>

<section>
    <div class="page-header">
        <h2>Pagination</h2>
    </div>
</section>
