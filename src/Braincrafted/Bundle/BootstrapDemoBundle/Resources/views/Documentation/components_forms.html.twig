<section>
    <div class="page-header">
        <h2 id="forms">Forms</h2>
    </div>

    <p>Manually integrating the styles from Bootstraps forms into a Symfony2 application is probably the most tideous part. Gladly, BraincraftedBootstrapBundle takes the hard work of your shoulders and does most of the integration for you.</p>

    <h3>Styles</h3>

    <p>BraincraftedBootstrapBundle integrates all styles from Bootstrap. You can pass the style attribute to most form widgets</p>

    <pre><code>{{ "{{ form(form, { 'style': 'horizontal' }) }}" }}
{{ "{{ form_start(form, { 'style': 'horizontal' }) }}" }}
{{ "{{ form_row(form.firstName, { 'style': 'horizontal' }) }}" }}
{{ "{{ form_label(form.firstName, { 'style': 'horizontal' }) }}" }}</code></pre>

    <p>If you pass the style to <code>form</code> or <code>form_start</code> you don't have to pass the style attribute to each <code>form_row</code> widget. The style will be defined for each widget between <code>form_start</code> and <code>form_end</code>.</p>

    <pre><code>{{ "{{ form_start(form, { 'style': 'horizontal' }) }}" }}
    {{ "{{ form_row(form.firstName) }}" }}
    {{ "{{ form_row(form.lastName) }}" }}
{{ "{{ form_end(form) }}" }}</code></pre>

    <p>Internally BraincraftedBootstrapBundle uses functions to write and read the global style and use can also use these functions, for example, when you use HTML for the <code>&lt;form&gt;</code> tag but want set the style once for all fields.</p>

    <pre><code>&lt;form action="..." method="..." class="form-horizontal"&gt;
    {{ "{{ bootstrap_set_style('horizontal') }}" }}

    {{ "{{ form_row(form.firstName) }}" }}
    {{ "{{ form_row(form.lastName) }}" }}

    {{ "{{ bootstrap_set_style('') }}" }}
&lt;/form&gt;</code></pre>

    <p>The function <code>bootstrap_get_style()</code> returns the current style.</p>

    <h4>Examples</h4>

    <p>The following examples shows the styles of all widgets provided by Symfony2 by default.</p>

    <div class="panel">
        <div class="panel-body">{{ form(horizontalForm, { 'style': 'horizontal' }) }}</div>
        <div class="panel-footer">Example of horizontal form</div>
    </div>

    <p>Bootstrap uses its grid to determine the size of label and widget. You can pass the <code>label_col</code> and <code>widget_col</code> options to set the number of columns label and widget should have.</p>

    <div class="panel">
        <div class="panel-body">
            <form action="" class="form-horizontal">
                {{ form_row(form.firstName, { 'label_col': 4, 'widget_col': 8, 'style': 'horizontal'}) }}
                <div class="form-group row">
                    {{ form_label(form.lastName, '', { 'label_col': 6, 'style': 'horizontal' }) }}
                    <div class="col-lg-6">
                        {{ form_widget(form.lastName) }}
                    </div>
                </div>
            </form>
        </div>
        <div class="panel-footer">Form row with custom columns</div>
    </div>

    <pre><code class="twig">{{ "{{ form_row(form.firstName, { 'label_col': 4, 'widget_col': 8}) }}" }}
{{ "{{ form_label(form.lastName, '', { 'label_col': 6, 'style': 'horizontal' }) }}" }}</code></pre>

    <pre><code class="php">$builder->add('firstName', 'text', array('attr' => array('label_col' => 4, 'widget_col' => 8)));</code></pre>

    <p>There is also an option <code>simple_col</code> which wraps the input field in a <code>&lt;div&gt;</code> with the given size. This is useful when creating compound types and is used, for example, in the date widget provided by BraincraftedBootstrapBundle.</p>

    <p>By default BootstrapBundle will use columns of size <code>lg</code> to render the form grid; you can change that by calling <code>form</code> or <code>form_start</code> with the <code>col_size</code> option or to use the Twig helper <code>bootstrap_set_col_style</code>.</p>

    <pre><code>{{ "{{ form(form, { 'style': 'horizontal', 'col_size': 'xs' }) }}" }}
{{ "{{ form_start(form, { 'style': 'horizontal', 'col_size': 'xs' }) }}" }}
{{ "{{ bootstrap_set_col_size('xs') }}" }}</code></pre>

    <h4>Basic Form</h4>

    <p>The default Bootstrap style is also included in this bundle.</p>

    <div class="panel">
        <div class="panel-body">{{ form(basicForm, { 'style': 'basic' }) }}</div>
        <div class="panel-footer">Example of basic form</div>
    </div>

    <h4>Inline Form</h4>

    <p>Bootstrap also contains an <code>inline</code> style.</p>

    <div class="alert alert-danger">
        <strong>Requires custom widths</strong>
        <p>Inputs, selects, and textareas are 100% wide by default in Bootstrap. To use the inline form, you'll have to set a width on the form controls used within.</p>
    </div>

    <pre><code class="twig">{{ "{{ form(inlineForm, { 'style': 'inline' }) }}" }}</code></pre>

    <div class="panel">
        <div class="panel-body">{{ form(inlineForm, { 'style': 'inline' }) }}</div>
        <div class="panel-footer">Example of inline form</div>
    </div>

    <h4>Checkbox and Radio Widgets</h4>

    <p><span class="label label-info">Note</span> This section talks only about the field types <code>checkbox</code> and <code>radio</code> and not about <code>choice</code>, which can be rendered using checkbox and radio buttons.</p>

    <p>Checkbox and radio widgets are a little bit different than other types of widgets, since Bootstraps wraps the input field inside the label. Therefore there are specific blocks <code>checkbox_row</code> and <code>radio_row</code> to render this markup. The blocks <code>checkbox_widget</code> and <code>radio_widget</code> only render the input element and not the label.</p>

    <p>By default Bootstrap aligns checkboxes and radio fields on the left, if you want to align checkboxes and radio buttons with the other form elements, use the option <code>align_with_widget</code>. This option can be either setted on the <code>form_row</code> function or as an attribute when building the form.</p>

    <pre><code class="php">$builder->add('termsAccepted', 'checkbox', array('attr' => array('align_with_widget' => true)));</code></pre>

    <pre><code>{{ "{{ form_row(form.termsAccepted, { 'align_with_widget': true }) }}" }}</code></pre>

    <hr>

    <h3>Help text</h3>

    <p>You can add help texts either when building the form or directly in the template.</p>

    <div class="panel">
        <div class="panel-body">{{ form_row(form.username, { 'help_text': 'Letters, numbers and underscores are allowed.' }) }}</div>
        <div class="panel-footer">Form row in basic style with help text.</div>
    </div>

    <pre><code class="php">$builder->add('username', 'text', array('attr' => array('help_text' => 'Letters, numbers and underscores are allowed.')));</code></pre>

    <pre><code class="twig">{{ "{{ form_row(form.username, { 'help_text': 'Letters, numbers and underscores are allowed.' }) }}" }}</code></pre>

    <hr>

    <h3>Input groups</h3>

    <p>Input groups can also be added using the form builder or the template. Currently you can prepend and append text and control the size.</p>

    <div class="panel">
        <div class="panel-body">
            {{ form_row(form.twitterScreenname, { 'input_group': { 'prepend': '@', 'size': 'large' } }) }}
            {{ form_row(form.price, { 'input_group': { 'append': '.00' } }) }}
            {{ form_row(form.price2) }}
        </div>
        <div class="panel-footer">Basic form with input groups in different sizes.</div>
    </div>

    <pre><code class="php">$builder->add(
    'twitterScreenName',
    'text',
    array('attr' => array('input_group' => array('prepend' => '@', 'size' => 'large')))
);
$builder->add(
    'price1',
    'text',
    array('attr' => array('input_group' => array('append' => '.00')))
);
$builder->add(
    'price2',
    'text',
    array('attr' => array('input_group' => array('prepend' => '$', 'append' => '.00', 'size' => 'small')))
);</code></pre>

    <pre><code class="twig">{{ "{{ form_row(form.twitterScreenname, { 'input_group': { 'prepend': '@', 'size': 'large' } }) }}" }}
{{ "{{ form_row(form.price, { 'input_group': { 'append': '.00' } }) }}" }}
{{ "{{ form_row(form.price2, { 'input_group': { 'prepend': '$', 'append': '.00', 'size': 'small' } }) }}" }}</code></pre>

    <hr>

    <h3>Additional Form Types</h3>

    <p>BraincraftedBootstrapBundle does not only provides styles for the existing form types of Symfony2 but also provides you with addional types. In some cases this is due to technical limitations of the implementation of Twig and/or Symfony2.</p>

    <h4>Collection</h4>

    <p><code>bootstrap_collection</code> is a form type that extends Symfony2s <code>collection</code> form type and includes styles and JavaScript to use the widget out of the box.</p>

    <p>The form type also introduces new options:</p>

    <ul>
        <li><code>add_button_text</code> allows you to define the text on the <strong>Add</strong> button</li>
        <li><code>delete_button_text</code> allows you to define the text on the <strong>Delete</strong> button</li>
        <li><code>sub_widget_col</code> sets the number of columns used for the widget</li>
        <li><code>button_col</code> sets the number of columns used for the delete button</li>
    </ul>

    <p>Here is an example of a form that lets you add and delete hobbits.</p>

    <pre><code class="php">$form = $this->createFormBuilder(array())
    ->add(
        'hobbits',
        'bootstrap_collection',
        array(
            'allow_add'          => true,
            'allow_delete'       => true,
            'add_button_text'    => 'Add Hobbit',
            'delete_button_text' => 'Delete Hobbit',
            'sub_widget_col'     => 9,
            'button_col'         => 3
        )
    )
    ->getForm();</code></pre>

    <p>When rendered with Bootstraps <code>horizontal</code> style it will look like this:</p>

    <div class="panel">
        {{ form(bcCollectionForm, { 'style': 'horizontal' }) }}
        <div class="panel-footer">Example</div>
    </div>

    <h3>Form errors</h3>

    <p>BraincraftedBootstrapBundle automatically styles error messages in forms.</p>

    <h4>Horizontal Form</h4>

    <div class="panel">
        <div class="panel-body">{{ form(errorForm, { 'style': 'horizontal' }) }}</div>
        <div class="panel-footer">Example of horizontal form with errors</div>
    </div>

    <div class="panel">
        <div class="panel-body">{{ form(error2Form, { 'style': 'horizontal' }) }}</div>
        <div class="panel-footer">Example of horizontal form with global errors</div>
    </div>

    <h4>Basic Form</h4>

    <div class="panel">
        <div class="panel-body">{{ form(basicErrorForm, { 'style': 'basic' }) }}</div>
        <div class="panel-footer">Example of basic form with errors</div>
    </div>

    <div class="panel">
        <div class="panel-body">{{ form(basicError2Form, { 'style': 'basic' }) }}</div>
        <div class="panel-footer">Example of basic form with global errors</div>
    </div>

    <h4>Inline Form</h4>

    <div class="panel">
        <div class="panel-body">{{ form(inlineErrorForm, { 'style': 'inline' }) }}</div>
        <div class="panel-footer">Example of inline form with errors</div>
    </div>

    <div class="panel">
        <div class="panel-body">{{ form(inlineError2Form, { 'style': 'inline' }) }}</div>
        <div class="panel-footer">Example of inline form with global errors</div>
    </div>

</section>